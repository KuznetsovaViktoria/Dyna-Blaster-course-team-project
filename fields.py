empty_field = [
        ["E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E"],
        ["E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E"],
        ["E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E"],
        ["E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E"],
        ["E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E"],
        ["E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E"],
        ["E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E"],
        ["E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E"],
        ["E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E"],
        ["E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E"],
        ["E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E"],
        ["E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E"],
        ["E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E"]
]

def read_field_from_file(filename):
        with open(filename, 'r') as f:
                lines = [[c for c in line.rstrip()] for line in f]
                if len(lines) != len(empty_field):
                    print(f"wrong number of lines in {filename}")
                    return empty_field
                size = len(empty_field)
                for line in lines:
                    if len(line) != size or (line.count('E') + line.count('B') + line.count('W') + line.count('P')) != size:
                        print("Bad line:", line)
                        return empty_field
                return lines


custom_field = read_field_from_file('custom_field.txt')

field1 = [
        ["E", "E", "E", "E", "W", "W", "E", "E", "W", "W", "W", "E", "W"],
        ["W", "B", "W", "B", "W", "B", "W", "B", "E", "B", "W", "B", "W"],
        ["W", "W", "E", "E", "W", "E", "W", "W", "W", "W", "W", "W", "W"],
        ["E", "B", "E", "B", "E", "B", "W", "B", "E", "B", "W", "B", "W"],
        ["E", "W", "E", "E", "E", "E", "E", "E", "W", "W", "W", "E", "W"],
        ["E", "B", "E", "B", "E", "B", "W", "B", "E", "B", "E", "B", "E"],
        ["E", "W", "E", "W", "W", "W", "E", "E", "W", "E", "E", "W", "W"],
        ["W", "B", "W", "B", "W", "B", "E", "B", "W", "B", "E", "B", "E"],
        ["W", "E", "W", "W", "E", "E", "E", "W", "E", "E", "W", "W", "W"],
        ["E", "B", "E", "B", "E", "B", "W", "B", "E", "B", "E", "B", "W"],
        ["W", "W", "E", "E", "W", "W", "E", "W", "W", "W", "E", "E", "E"],
        ["W", "B", "E", "B", "W", "B", "E", "B", "E", "B", "E", "B", "E"],
        ["W", "E", "W", "W", "E", "E", "W", "W", "W", "W", "W", "E", "E"]
]

random_field = field1

field2 = [
        ["E", "B", "E", "E", "E", "B", "E", "E", "E", "B", "E", "E", "E"],
        ["E", "B", "E", "B", "E", "B", "E", "B", "E", "B", "E", "B", "E"],
        ["E", "B", "E", "B", "E", "B", "E", "B", "E", "B", "E", "B", "E"],
        ["E", "B", "E", "B", "E", "B", "E", "B", "E", "B", "E", "B", "E"],
        ["E", "B", "E", "B", "E", "B", "E", "B", "E", "B", "E", "B", "E"],
        ["E", "B", "E", "B", "E", "B", "E", "B", "E", "B", "E", "B", "E"],
        ["E", "B", "E", "B", "E", "B", "E", "B", "E", "B", "E", "B", "E"],
        ["E", "B", "E", "B", "E", "B", "E", "B", "E", "B", "E", "B", "E"],
        ["E", "B", "E", "B", "E", "B", "E", "B", "E", "B", "E", "B", "E"],
        ["E", "B", "E", "B", "E", "B", "E", "B", "E", "B", "E", "B", "E"],
        ["E", "B", "E", "B", "E", "B", "E", "B", "E", "B", "E", "B", "E"],
        ["E", "B", "E", "B", "E", "B", "E", "B", "E", "B", "E", "B", "E"],
        ["E", "E", "E", "B", "E", "E", "E", "B", "E", "E", "E", "B", "E"]
]

labyrinth_field = field2

field3 = [
        ["E", "E", "W", "W", "W", "E", "W", "W", "W", "W", "W", "E", "E"],
        ["E", "B", "W", "W", "B", "E", "E", "W", "B", "W", "W", "B", "E"],
        ["W", "B", "W", "B", "B", "B", "W", "B", "B", "B", "W", "B", "W"],
        ["W", "B", "W", "W", "B", "W", "B", "W", "B", "W", "W", "B", "W"],
        ["W", "B", "W", "B", "W", "B", "W", "B", "W", "B", "W", "B", "W"],
        ["W", "W", "W", "W", "W", "W", "W", "W", "W", "E", "E", "W", "W"],
        ["W", "B", "E", "B", "B", "B", "W", "B", "B", "B", "E", "B", "W"],
        ["W", "W", "E", "E", "W", "W", "W", "W", "W", "W", "W", "W", "W"],
        ["W", "B", "W", "B", "W", "B", "W", "B", "W", "B", "W", "B", "W"],
        ["W", "B", "W", "W", "B", "W", "B", "W", "B", "W", "W", "B", "W"],
        ["W", "B", "W", "B", "B", "B", "W", "B", "B", "B", "W", "B", "W"],
        ["E", "B", "W", "W", "B", "W", "E", "W", "B", "W", "W", "B", "E"],
        ["E", "E", "W", "W", "W", "E", "E", "W", "W", "W", "W", "E", "E"]
]

busy_field = field3


field4 = [
        ["E", "B", "W", "B", "W", "E", "E", "E", "W", "B", "W", "B", "E"],
        ["E", "B", "W", "B", "E", "E", "E", "E", "E", "B", "W", "B", "E"],
        ["E", "B", "E", "B", "E", "W", "W", "W", "E", "B", "E", "B", "E"],
        ["E", "B", "E", "E", "W", "W", "W", "W", "W", "E", "E", "B", "E"],
        ["E", "E", "E", "W", "W", "B", "W", "B", "W", "W", "E", "E", "E"],
        ["W", "E", "E", "W", "B", "B", "W", "B", "B", "W", "E", "E", "W"],
        ["B", "B", "E", "W", "W", "W", "W", "W", "W", "W", "E", "B", "B"],
        ["W", "E", "E", "W", "W", "B", "B", "B", "W", "W", "E", "E", "W"],
        ["E", "E", "E", "E", "E", "W", "W", "W", "E", "E", "E", "E", "E"],
        ["E", "B", "E", "E", "W", "E", "W", "E", "W", "E", "E", "B", "E"],
        ["E", "B", "E", "B", "E", "E", "E", "E", "E", "B", "E", "B", "E"],
        ["E", "B", "W", "B", "E", "B", "E", "B", "E", "B", "W", "B", "E"],
        ["E", "B", "W", "B", "W", "B", "E", "B", "W", "B", "W", "B", "E"]
]

scull_field = field4




# BLOCKS = [
#     (0, 100), (100, 100), (200, 100), (300, 100), (600, 100), (500, 100),
#     (50, 550), (300, 150), (300, 200), (300, 300), (300, 500),
#     (200, 150), (200, 50), (200, 350), (200, 400), (200, 550), (200, 600),
#     (400, 50), (400, 150), (400, 250), (400, 350), (400, 400), (400, 550),
#     (500, 50), (500, 150), (500, 200), (500, 250), (500, 450), (600, 50), (600, 150),
#     (600, 200), (600, 250), (600, 350), (600, 450), (600, 500), (150, 350), (150, 450),
#     (250, 50), (250, 450), (250, 350), (250, 550), (350, 450), (350, 150), (350, 550),
#     (450, 50), (450, 150), (450, 250), (450, 550), (550, 150), (550, 350), (550, 450),
#     (0, 150), (0, 450), (0, 400), (0, 550), (0, 600), (0, 650), (100, 650), (150, 650),
#     (350, 650), (300, 650), (500, 650), (400, 650), (450, 650)
# ]
# BLOCKS_CANT_BROKE = [
#     (50, 100), (150, 100), (250, 100), (350, 100), (450, 100), (550, 100),
#     (50, 200), (150, 200), (250, 200), (350, 200), (450, 200), (550, 200),
#     (50, 300), (150, 300), (250, 300), (350, 300), (450, 300), (550, 300),
#     (50, 400), (150, 400), (250, 400), (350, 400), (450, 400), (550, 400),
#     (50, 500), (150, 500), (250, 500), (350, 500), (450, 500), (550, 500),
#     (50, 600), (150, 600), (250, 600), (350, 600), (450, 600), (550, 600),
#     (50, 150), (50, 250), (50, 350), (50, 450)
# ]